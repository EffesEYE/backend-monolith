openapi: 3.0.0
info:
  title: EffesEYE Platform API
  version: 2020-10
  contact:
    email: chaluwa@gmail.com
    name: Charles Odili
    url: charlesodili.rocks
  license:
    name: MIT
  description: The EffesEYE MVP API
  termsOfService: 'https://effeseye.herokuapp.com/tc'
servers:
  - url: 'https://effeseye.herokuapp.com'
    description: Prod
paths:
  '/{version}/airtime/recharge':
    post:
      summary: Airtime recharge endpoint
      tags:
        - airtime
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeError'
      operationId: post-airtime-recharge
      description: Buy airtime credit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirtimeRechargeRequest'
            examples: {}
        description: HTTP request payload of data for airtime recharge
      security: []
      parameters: []
    parameters:
      - schema:
          type: string
          minLength: 7
          maxLength: 7
          pattern: '^\d{4}-\d{2}$'
          example: 2020-10
        name: version
        in: path
        required: true
        description: The API version
  '/{version}/airtime/recharge/{requestId}':
    parameters:
      - schema:
          type: string
        name: requestId
        in: path
        required: true
        description: The request id of a previous airtime recharge request
      - schema:
          type: string
          minLength: 7
          maxLength: 7
          pattern: '^\d{4}-\d{2}$'
          example: 2020-10
        name: version
        in: path
        required: true
        description: The API version
    get:
      summary: Airtime recharge status endpoint
      tags:
        - airtime
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirtimeRechargeError'
      operationId: get-airtime-recharge-requestId
      description: Query the status of an airtime recharge request using its request id
      security: []
  '/{version}/register':
    post:
      summary: The user registration and account creation endpoint
      tags:
        - BVN
        - email
        - phone number
        - registration
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRegistrationResponse'
              examples:
                example:
                  value:
                    message: Account created
                    accountId: 5645f-5dw4358-hgf-34545345345
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRegistrationResponse'
              examples:
                example:
                  value:
                    message: Account already exists!
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRegistrationResponse'
              examples:
                example:
                  value:
                    message: Error handling your request. Pls contact support
      operationId: post-register
      description: Creates a new user account on the EffesEYE platform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegistrationRequest'
            examples:
              example:
                value:
                  bvn: '12345678901'
                  pswd: pa$$word
                  email: user@example.com
        description: The HTTP request payload of data needed to create the new account
    parameters:
      - schema:
          type: string
          example: 2020-10
          minLength: 7
          maxLength: 7
          pattern: '^\d{4}-\d{2}$'
        name: version
        in: path
        required: true
        description: The API version
  '/{version}/ping':
    get:
      summary: A meta endpoint for retrieving the server's pulse
      tags:
        - ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
              examples:
                example:
                  value:
                    message: 'EffesEYE API, Tuesday 4th October 2025'
      operationId: get-ping
      description: Get a pulse of the API service
    post:
      summary: Get the server's pulse
      tags:
        - ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
      operationId: post-ping
      description: Get a pulse of the server
    parameters:
      - schema:
          type: string
          minLength: 7
          maxLength: 7
          example: 2020-10
          pattern: '^\d{4}-\d{2}$'
        name: version
        in: path
        required: true
        description: The API version
  '/{version}':
    get:
      summary: The catch all / fall-back API endpoint
      tags:
        - ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
      operationId: get
      description: A catch-all / fall-back endpoint for the API
    post:
      summary: A catch all / fall-back endpoint
      tags:
        - ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
      operationId: post
      description: A catch all / fall-back endpoint
    parameters:
      - schema:
          type: string
          example: 2020-10
          minLength: 7
          maxLength: 7
          pattern: '^\d{4}-\d{2}$'
        name: version
        in: path
        description: The API version
        required: true
  '/{version}/auth/user-login':
    post:
      summary: PWA client user authentication
      tags:
        - auth
        - login
        - email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                example:
                  value:
                    message: login successful
                    authToken: '567459867405764509769457694'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                example:
                  value:
                    message: 'login failed, pls check your credentials and retry'
      operationId: post-auth-user-login
      description: The endpoint for authenticating users and granting access into the client application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReguest'
            examples:
              example:
                value:
                  pswd: pa55W0rd
                  email: user@example.com
        description: The HTTP request payload of data for user authentication
    parameters:
      - schema:
          type: string
          minLength: 7
          maxLength: 7
          example: 2020-10
          pattern: '^\d{4}-\d{2}$'
        name: version
        in: path
        required: true
        description: The API version
  '/{version}/auth/admin-login':
    post:
      summary: Admin user authentication
      tags:
        - auth
        - login
        - email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                example:
                  value:
                    message: successful login
                    authToken: 56745967457640597645967405492-348-239-42
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                example:
                  value:
                    message: unsuccessful login
      operationId: post-auth-admin-login
      description: The endpoint for authenticating administrators and granting access into the admin application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReguest'
            examples:
              example:
                value:
                  pswd: pa55W0rd
                  email: user@example.com
        description: The HTTP request payload of data for admin authentication
    parameters:
      - schema:
          type: string
          minLength: 7
          maxLength: 7
          example: 2020-10
          pattern: '^\d{4}-\d{2}$'
        name: version
        in: path
        required: true
        description: The API version
  '/{version}/spec':
    get:
      summary: Get the API specification
      tags:
        - spec
      responses:
        '200':
          description: OK
          content:
            text/yaml:
              schema:
                type: object
                properties: {}
      operationId: get-spec
      description: Retrieve the EffesEYE platform API specification
    parameters:
      - schema:
          type: string
          pattern: '^\d{4}-\d{2}$'
          minLength: 7
          maxLength: 7
          example: 2020-10
        name: version
        in: path
        required: true
  '/{version}/auth/verify-token':
    parameters:
      - schema:
          type: string
        name: version
        in: path
        required: true
    post:
      summary: Verify a given authentication token
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified:
                    type: boolean
                    description: Indicates the validity of the token in question
                required:
                  - verified
              examples:
                example:
                  value:
                    verified: true
      operationId: post-version-auth-verify-token
      description: 'Checks the validity and expiry of a token, and only returns true for tokens that have a valid cryptographic signature and have not expired'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The token to verify
              required:
                - token
            examples:
              example:
                value:
                  token: 67760385-30483gdlfkglkdfgtu9564967540764674hgdflhglkfhl2309-5403485
components:
  schemas:
    AirtimeRechargeResponse:
      title: AirtimeRechargeResponse
      type: object
      description: 'HTTP response payload from an airtime recharge request. The `amount`, `currency`, `network`, `sendTo`, and `requestedBy` fields are only present when responding to a `GET` request since `POST` requests will already have such data.'
      x-tags:
        - airtime
      x-examples:
        successful-recharge:
          message: recharge successful
          requestId: dfd-453533-5gfds-453453453
          recharged: true
          requestStatus: DONE
        failed-recharge:
          message: recharge failed
          requestId: dfsd-4534534535-gfd5-5435345353
          recharged: false
          requestStatus: DONE
        pending-recharge:
          message: pending recharge
          requestId: 543-fgdt45-534534535-534535
          recharged: false
          requestStatus: IN-PROGRESS
      properties:
        message:
          type: string
          description: a message describing the status or progress of the airtime recharge request
        requestId:
          type: string
          description: 'The id of the request. Can be handy when the request needs to be querried in the future e.g to see if the status has changed, or to build a transaction history.'
        recharged:
          type: boolean
          description: Indicates if the recharge was successful (true) or not (false)
        requestStatus:
          type: string
          enum:
            - DONE
            - IN-PROGRESS
          description: The status for the airtime recharge request. Can either be DONE or IN-PROGRESS
        amount:
          type: integer
          description: 'The airtime recharge amount, between 100 and 10,000 in specified currency'
          minimum: 100
          maximum: 10000
        currency:
          type: string
          enum:
            - NGN
          description: 'The ISO-xx formatted currency of `amount` for the airtime purchase '
        network:
          type: string
          enum:
            - MTN
            - Airtel
            - Glo
            - 9Mobile
          description: The network provider whose airtime is being purchased
        sendTo:
          type: string
          description: The phone number to credit the aritime to
        requestedBy:
          type: string
          description: The phone number requesting the airtime recharge
        accountToDebit:
          type: string
          description: Verified bank account to debit
      required:
        - message
        - requestId
        - recharged
        - requestStatus
    AirtimeRechargeRequest:
      title: AirtimeRechargeRequest
      type: object
      x-tags:
        - airtime
      description: 'The HTTP request payload for an airtime recharge request. If the optional `network` field is not specified, it is inferred from the `requestedBy` phone number'
      properties:
        amount:
          type: integer
          description: 'The airtime recharge amount, between 100 and 10,000 in specified currency'
          minimum: 100
          maximum: 10000
        currency:
          type: string
          enum:
            - NGN
          description: 'The ISO-xx formatted currency of `amount` for the airtime purchase '
        network:
          type: string
          enum:
            - MTN
            - Airtel
            - Glo
            - 9Mobile
          description: The network provider whose airtime is being purchased
        sendTo:
          type: string
          description: The phone number to credit the aritime to
        requestedBy:
          type: string
          description: The phone number requesting the airtime recharge
        accountToDebit:
          type: string
          description: Verified bank account to debit
      required:
        - amount
        - currency
        - sendTo
        - requestedBy
        - accountToDebit
    AirtimeRechargeError:
      title: AirtimeRechargeError
      type: object
      description: The HTTP response payload for filed airtime recharge requests
      properties:
        message:
          type: string
          description: description of error
        requestId:
          type: string
          description: The ID of the airtime recharge request
        statusCode:
          type: string
          description: 'The corresponsding HTTP status code. E.g `401` if the required secuirty headers are absent, or `500` for a server / service error'
      required:
        - message
        - requestId
        - statusCode
    AccountRegistrationRequest:
      title: AccountRegistrationRequest
      type: object
      description: The HTTP palyload for a new account registration on the EffesEYE platform
      x-tags:
        - BVN
        - email
        - phone number
        - registration
      properties:
        bvn:
          type: string
          minLength: 11
          maxLength: 11
          description: The unique Bank Verification Number (BVN) of the new user
        pswd:
          type: string
          minLength: 6
          description: The user's password
          format: password
        email:
          type: string
          format: email
          description: The user's email address
          minLength: 8
      required:
        - bvn
        - pswd
        - email
    AccountRegistrationResponse:
      title: AccountRegistrationResponse
      type: object
      description: The HTTP response payload for account registration requests
      x-tags:
        - registration
        - BVN
      properties:
        message:
          type: string
          description: A status message on the registration request
        accountId:
          type: string
          description: The account ID of the successfully registered user. Only present on succcessful registration
      required:
        - message
    PulseResponse:
      title: PulseResponse
      type: object
      properties:
        message:
          type: string
          description: A message from the server
      required:
        - message
      description: A pulse response from the EffesEYE API server
    LoginReguest:
      title: LoginReguest
      type: object
      description: The HTTP request payload schema
      properties:
        pswd:
          type: string
          minLength: 6
          description: The user account password
        email:
          type: string
          format: email
          description: The user account email
      required:
        - pswd
        - email
    LoginResponse:
      title: LoginResponse
      type: object
      description: HTTP response payload schema
      properties:
        message:
          type: string
          description: Status of the login attempt
        authToken:
          type: string
          description: An authorization token provided on successful login. Automatically expires after 15 minutes
      required:
        - message
  securitySchemes: {}
tags:
  - name: airtime
  - name: BVN
  - name: email
  - name: phone number
  - name: registration
  - name: ping
  - name: auth
  - name: login
  - name: spec
